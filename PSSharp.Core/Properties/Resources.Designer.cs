//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSSharp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PSSharp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using namespace System.Collections;
        ///using namespace System.Management.Automation;
        ///using namespace System.Management.Automation.Language;
        ///
        ///param(
        ///	[string]$commandName, 
        ///	[string]$parameterName, 
        ///	[string]$wordToComplete, 
        ///	[CommandAst]$commandAst, 
        ///	[IDictionary]$fakeBoundParameters
        ///)
        ///if ($parameterName -eq &apos;Parameter&apos; -or $parameterName -eq &apos;ParameterName&apos;) {
        ///	(Get-Command &quot;$($fakeBoundParameters[&apos;Command&apos;])$($fakeBoundParameters[&apos;CommandName&apos;])*&quot;).Parameters.Keys `
        ///	| ForEach-Object { 
        ///		ret [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandParameterCompletion {
            get {
                return ResourceManager.GetString("CommandParameterCompletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CmdletBinding()]
        ///param(
        ///	[Parameter()]
        ///	[System.String]
        ///	$commandName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$parameterName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$wordToComplete,
        ///	
        ///	[Parameter()]
        ///	[System.Management.Automation.Language.CommandAst]
        ///	$commandAst,
        ///	
        ///	[Parameter()]
        ///	[System.Collections.IDictionary]
        ///	$fakeBoundParameters
        ///)
        ///process {
        ///	trap{break}
        ///	$FilePath = &quot;{0}&quot;
        ///
        ///	if (!(Test-Path $FilePath -PathType Leaf)) {
        ///		return
        ///	}
        ///
        ///	try {
        ///		[System.IO.FileStream]$FileStream = N [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FileContentCompletion {
            get {
                return ResourceManager.GetString("FileContentCompletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CmdletBinding()]
        ///param(
        ///	[Parameter()]
        ///	[System.String]
        ///	$commandName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$parameterName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$wordToComplete,
        ///	
        ///	[Parameter()]
        ///	[System.Management.Automation.Language.CommandAst]
        ///	$commandAst,
        ///	
        ///	[Parameter()]
        ///	[System.Collections.IDictionary]
        ///	$fakeBoundParameters
        ///)
        ///process {
        ///	trap{break}
        ///	[System.String[]]$Set = ,{0} | Where-Object {$_}
        ///
        ///	foreach ($item in $set) {
        ///		if ($set -like $item) {
        ///			New-CompletionResult  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SetCompletion {
            get {
                return ResourceManager.GetString("SetCompletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [CmdletBinding()]
        ///param(
        ///	[Parameter()]
        ///	[System.String]
        ///	$commandName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$parameterName,
        ///	
        ///	[Parameter()]
        ///	[System.String]
        ///	$wordToComplete,
        ///	
        ///	[Parameter()]
        ///	[System.Management.Automation.Language.CommandAst]
        ///	$commandAst,
        ///	
        ///	[Parameter()]
        ///	[System.Collections.IDictionary]
        ///	$fakeBoundParameters
        ///)
        ///process {
        ///	trap{break}
        ///	[System.Boolean]$CompleteDefinition = {0}
        ///
        ///	$Variables = Get-Variable -Scope 1 -Name &quot;$wordToComplete*&quot;
        ///	foreach ($variable in $ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VariableNameCompletion {
            get {
                return ResourceManager.GetString("VariableNameCompletion", resourceCulture);
            }
        }
    }
}
